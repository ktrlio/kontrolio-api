service: kontrolio-api

frameworkVersion: "2"

useDotenv: true

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  timeout: 2
  memorySize: 128
  stage: prod
  environment:
    ENV: ${self:custom.envVariables.ENV.${self:custom.currentStage}}
    DB_USER: ${ssm:/kontrolio-db-user~true}
    DB_PASSWORD: ${ssm:/kontrolio-db-password~true}
    DB_NAME: ${ssm:/kontrolio-db-name~true}
    DB_HOST: ${ssm:/kontrolio-db-host~true}
    DB_PORT: ${ssm:/kontrolio-db-port~true}
    SENDER_EMAIL: ${ssm:/kontrolio-sender-email~true}
    JWT_SECRET: ${ssm:/kontrolio-jwt-secret~true}
    ENABLE_EMAIL_AUTH: 0
    CLIENT_URL: https://kontrolio.com

package:
  individually: true

functions:
  migrations:
    handler: dist/migrations
    package:
      exclude:
        - ./**
      include:
        - ./dist/migrations

  createUser:
    handler: dist/create_user
    events:
      - httpApi:
          path: /user
          method: post
          authorizers:
            authorizer:
              audience:
                # https://github.com/dherault/serverless-offline/issues/1078#issuecomment-729681919
                - abcxxxxxxx
                - abcxxxxxxx
    package:
      exclude:
        - ./**
      include:
        - ./dist/create_user

  createRecord:
    handler: dist/create_record
    events:
      - httpApi:
          path: /record
          method: post
    package:
      exclude:
        - ./**
      include:
        - ./dist/create_record

  login:
    handler: dist/login
    events:
      - httpApi:
          path: /login
          method: post
          authorizers:
            authorizer:
              audience:
                # https://github.com/dherault/serverless-offline/issues/1078#issuecomment-729681919
                - abcxxxxxxx
                - abcxxxxxxx
    package:
      exclude:
        - ./**
      include:
        - ./dist/login

  get_api_key:
    handler: dist/get_api_key
    events:
      - httpApi:
          path: /api-key
          method: post
          authorizers:
            authorizer:
              audience:
                # https://github.com/dherault/serverless-offline/issues/1078#issuecomment-729681919
                - abcxxxxxxx
                - abcxxxxxxx
    package:
      exclude:
        - ./**
      include:
        - ./dist/get_api_key

  authorizer:
    handler: dist/authorizer

plugins:
  - serverless-offline
  - serverless-plugin-scripts

custom:
  currentStage: ${opt:stage, self:provider.stage}
  envVariables:
    ENV:
      prod: production
      dev: development
  serverless-offline:
    useDocker: true
    ignoreJWTSignature: true
    httpPort: 9000
  scripts:
    hooks:
      "deploy:finalize": serverless invoke -f migrations
